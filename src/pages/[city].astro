---
import Layout from '../layouts/Layout.astro';
import locations from '../data/locations.json'; // Your master list

// This is a special Astro function
export async function getStaticPaths() {
  const allCities = [];
  
  // Go through your master list and get all city slugs
  locations.states.forEach(state => {
    state.cities.forEach(city => {
      allCities.push({ params: { city: city.slug } });
    });
  });
  locations.unionTerritories.forEach(ut => {
    ut.cities.forEach(city => {
      allCities.push({ params: { city: city.slug } });
    });
  });

  return allCities;
}

const { city } = Astro.params;

// Find the "pretty name", "imageUrl", and new "mapUrl"
let cityName = "City Guide";
let stateName = "India";
let heroImageUrl = "https://placehold.co/1200x600/ccc/aaa?text=Where+In+India";
let mapUrl = "#"; // <-- Default fallback link for the map button

[...locations.states, ...locations.unionTerritories].forEach(loc => {
  loc.cities.forEach(c => {
    if (c.slug === city) {
      cityName = c.name;
      stateName = loc.name;
      heroImageUrl = c.imageUrl;
      if (c.mapUrl) {
        mapUrl = c.mapUrl; // <-- We found the new map URL!
      }
    }
  });
});

// Dynamically import the *correct* JSON file from your data folder
const cityData = await import(`../data/cities/${city}.json`);
const places = cityData.default; 
---

<Layout title=`${cityName} - Where In India`>
	<main>
		<!-- New Hero Section -->
		<header class="hero">
			<div 
				class="hero-image hero-image-city" 
				style=`background-image: url(${heroImageUrl});`
			></div>
			<div class="hero-text">
				<h1>The most trusted list of recos for {cityName}</h1>
				<p>Your curated guide to {stateName}</p>
			</div>
		</header>

		<!-- Main content grid -->
		<div class="main-content">
			<div class="recommendation-grid">
				
				<!-- Loop through all categories from the imported JSON -->
				{places.map(category => (
					<div class="recommendation-card">
						<h2>
							<span class="emoji">{category.emoji}</span>
							{category.title}
						</h2>
						<ol>
							{category.items.map(item => (
								<li>
									<a href={item.url} target="_blank" rel="noopener noreferrer">{item.name}</a>
								</li>
							))}
						</ol>
					</div>
				))}
			</div>
		</div>

		<!-- 
		  NEW FLOATING MAP BUTTON:
		  Updated structure with separate icon and text spans.
		  We've added an id="map-button" for the script.
		-->
		<a href={mapUrl} class="floating-map-button" id="map-button" target="_blank" rel="noopener noreferrer">
			<span class="map-icon">
				<!-- New Google Maps Icon -->
				<svg width="22" height="22" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7Zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5Z" fill="currentColor"/>
				</svg>
			</span>
			<span class="map-text">Explore on Google Maps</span>
		</a>

	</main>

	<!-- 
	  NEW SCRIPT for button animation.
	  This will run on the city page to control the 5-second timer.
	-->
	<script is:raw>
		document.addEventListener('DOMContentLoaded', () => {
			const mapButton = document.getElementById('map-button');
			if (mapButton) {
				// After 5 seconds, add the 'collapsed' class
				setTimeout(() => {
					mapButton.classList.add('collapsed');
				}, 5000);
			}
		});
	</script>
</Layout>

